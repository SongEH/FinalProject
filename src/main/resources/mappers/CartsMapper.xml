<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="first.final_project.dao.CartsMapper">
   <!-- 전체조회  -->
   <!-- <select id="selectList" resultType="carts">
     select * from carts order by carts_id desc
  </select> -->
  
   <select id="selectList" parameterType="int" resultType="carts">
      SELECT 
         c.*,                          
         s.shop_name   AS shop_name,    
         m.menu_name   AS menu_name,    
         m.menu_img    AS menu_img,   
         m.menu_price  AS menu_price,
         CASE 
            WHEN DAYNAME(CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')) = s.shop_close_day THEN '휴무일'
            WHEN TIME('23:59:59') > TIME(CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')) 
            and TIME(CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')) > TIME(s.shop_open_hour) THEN '영업중'
            WHEN TIME(s.shop_close_hour) > TIME(CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')) THEN '영업중'
            ELSE '영업전'
         END AS status  
      FROM 
         carts c
      JOIN 
         menu m ON c.menu_id = m.menu_id
      JOIN 
         shop s ON m.shop_id = s.shop_id
      WHERE
         c.orders_id IS NULL
         AND c.member_id = #{ member_id }
      ORDER BY shop_id;
   </select> 
   
<!--  초기 selectList 
   <select id="selectList" parameterType="int" resultType="carts">
      SELECT 
         c.*,                          Carts 테이블의 모든 컬럼을 선택
         s.shop_name   AS shop_name,    shop 테이블에서 가게명
         m.menu_name   AS menu_name,     Menu 테이블에서 메뉴명
         m.menu_img    AS menu_img,    Menu 테이블에서 메뉴이미지명
         m.menu_price  AS menu_price   Menu 테이블에서 메뉴가격
      FROM 
         carts c
      JOIN 
         menu m ON c.menu_id = m.menu_id
      JOIN 
         shop s ON m.shop_id = s.shop_id
      WHERE
         c.orders_id IS NULL
         AND c.member_id = #{ member_id }
      ORDER BY shop_id;
   </select>
   -->

   <!-- Paging별 조회 -->
   <select id="selectPageList" parameterType="Map" resultType="carts">
	select * from
	(
		select
			rank() over(order by carts_id desc) as no,
			c.*
		from
			(select * from carts) c
	) cc
	where no between #{ start } and #{ end }
   </select>


   <!-- 전체레코드수 구하기 
       oracle : nvl()
       mysql  : ifnull() -->
   <select id="selectRowTotal" resultType="int">
     select ifnull(count(*),0) from carts 
   </select>


   <!-- carts_id 에 해당되는 CartsVo 조회  -->
   <select id="selectOne" parameterType="int" resultType="carts">
     select * from carts where carts_id=#{ carts_id }
   </select>

   <!-- 메뉴id로 장바구니 항목 조회 쿼리 -->
   <select id="findByMenuId" resultType="carts">
        SELECT * FROM carts
        WHERE member_id = #{member_id}
        AND shop_id = #{shop_id}
        AND menu_id = #{menu_id}
        and orders_id IS NULL
        LIMIT 1
   </select>

   <!-- 등록 -->
   <insert id="insert" parameterType="carts">
    INSERT INTO carts(
        carts_quantity, 
        member_id, 
        shop_id,
        menu_id
    )
    VALUES (
        #{carts_quantity}, 
        #{member_id}, 
        #{shop_id}, 
        #{menu_id}
    );
   </insert>

   <!-- 삭제 -->
   <delete id="delete" parameterType="int">
     delete from carts
     where carts_id=#{carts_id}
   </delete>

   <!-- 수량 수정 -->
   <update id="update" parameterType="carts">
      update carts 
         set carts_quantity=#{ carts_quantity }
       where carts_id=#{ carts_id }
       and orders_id IS NULL
   </update>

   <!-- 주문한 메뉴는 장바구니 테이블에서 주문ID 추가  -->
   <update id="updateOrderId" parameterType="Map">
      update carts 
         set orders_id=#{ orders_id }
      where shop_id=#{ shop_id }
         and member_id=#{ member_id }
         and orders_id IS NULL;
   </update>

   <!-- 조건에 맞는 장바구니 항목 조회 쿼리 -->
   <select id="findPendingOrders" resultType="carts">
      SELECT 
         c.*,                         -- Carts 테이블의 모든 컬럼을 선택
         s.shop_name   AS shop_name,    -- Shop 테이블에서 가게명
         m.menu_name   AS menu_name,    -- Menu 테이블에서 메뉴명
         m.menu_img    AS menu_img,     -- Menu 테이블에서 메뉴 이미지명
         m.menu_price  AS menu_price    -- Menu 테이블에서 메뉴 가격
      FROM 
         carts c
      JOIN 
         menu m ON c.menu_id = m.menu_id
      JOIN 
         shop s ON m.shop_id = s.shop_id
      WHERE 
         c.member_id = #{member_id}
         AND c.shop_id = #{shop_id}
         AND c.orders_id IS NULL;
   </select>

   <!-- 주문 ID가 같은 장바구니 목록 -->
   <select id="selectCartListByOrdersId" parameterType="int" resultType="carts">
      SELECT 
         c.*,                         -- Carts 테이블의 모든 컬럼을 선택
         m.menu_name   AS menu_name,    -- Menu 테이블에서 메뉴명
         m.menu_img    AS menu_img,     -- Menu 테이블에서 메뉴 이미지명
         m.menu_price  AS menu_price    -- Menu 테이블에서 메뉴 가격
      FROM 
         carts c
      JOIN 
         menu m ON c.menu_id = m.menu_id
      WHERE 
         c.orders_id = #{orders_id}
   </select>
</mapper>
