<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="first.final_project.dao.OrderMapper">

    <!-- 주문목록 -->
    <select id="selectList" parameterType="int" resultType="order">
        SELECT 
            o.*,  -- orders 테이블의 모든 컬럼
            s.shop_name, 
            s.shop_img,
            COUNT(c.menu_id) AS menu_count
        FROM orders o
        JOIN shop s ON o.shop_id = s.shop_id
        LEFT JOIN carts c ON o.orders_id = c.orders_id
        LEFT JOIN addr a ON o.addr_id = a.addr_id 
        WHERE o.member_id = #{member_id}
        GROUP BY o.orders_id, s.shop_name, s.shop_img
    </select>

    <select id="selectOne" parameterType="int" resultType="order">
      SELECT
          o.*,  
          s.shop_name AS shop_name,
          s.shop_img AS shop_img,
          COUNT(c.menu_id) AS menu_count,
          a.addr_line1,    
          a.addr_line2,    
          m.member_phone  
      FROM orders o
      JOIN shop s ON o.shop_id = s.shop_id
      LEFT JOIN carts c ON o.orders_id = c.orders_id
      LEFT JOIN addr a ON o.addr_id = a.addr_id
      LEFT JOIN member m ON o.member_id = m.member_id  
      WHERE o.orders_id = #{orders_id}
      GROUP BY o.orders_id, s.shop_name, s.shop_img, a.addr_line1, a.addr_line2, m.member_phone
    </select>

    <!-- orders_id로 주문목록 조회 -->
    <select id="selectOneByOrdersId" parameterType="int" resultType="order">
        select o.*, s.shop_name
        from orders o
        inner join shop s on o.shop_id = s.shop_id
        where o.orders_id = #{orders_id}
    </select>

    <select id="getShopIdByOrderId" parameterType="int" resultType="int">
        select shop_id from shop where owner_id = #{owner_id}
    </select>

    <!-- 소프트 삭제 -->
    <update id="softDelete" parameterType="int">
        UPDATE orders
        SET orders_isdelete = 1
        WHERE orders_id = #{orders_id}
    </update>


    <select id="getAcceptOrderList" parameterType="map" resultType="order">
      SELECT o.*, a.addr_line1 AS addr_line1, a.addr_line2 AS addr_line2, m.member_nickname AS member_nickname, m.member_nickname AS member_nickname, m.member_phone AS member_phone
      FROM orders o
      JOIN shop s ON o.shop_id = s.shop_id
      JOIN owner ow ON s.owner_id = ow.owner_id
      JOIN addr a ON o.addr_id = a.addr_id
      JOIN member m ON a.member_id = m.member_id
      WHERE ow.owner_id = #{owner_id}
      AND o.orders_status != '배달 완료'
      ORDER BY o.orders_id
    </select>

    <update id="updateOrderStatus">
      UPDATE orders SET orders_status = #{status}
      WHERE orders_id = #{orders_id}
    </update>

    <delete id="deleteOrder">
     DELETE from orders
     WHERE orders_id = #{orders_id}
    </delete>

    <select id="getCompleteOrderList" parameterType="map" resultType="order">
      SELECT o.*, a.addr_line1 AS addr_line1, a.addr_line2 AS addr_line2, m.member_nickname AS member_nickname, m.member_nickname AS member_nickname, m.member_phone AS member_phone
      FROM orders o
      JOIN shop s ON o.shop_id = s.shop_id
      JOIN owner ow ON s.owner_id = ow.owner_id
      JOIN addr a ON o.addr_id = a.addr_id
      JOIN member m ON a.member_id = m.member_id
      WHERE ow.owner_id = #{owner_id}
      AND o.orders_status = '배달 완료'
      ORDER BY o.orders_id
    </select>


    <!-- 총 주문 건수 조회 쿼리 -->
    <select id="getTotalCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM orders WHERE member_id = #{member_id} AND orders_isdelete = 0
    </select>

    <!-- 페이징 처리된 완료된 주문 목록을 가져오는 쿼리 -->
    <select id="selectPageList" parameterType="map" resultType="order">
        SELECT 
            o.*,  -- orders 테이블의 모든 컬럼
            s.shop_name, 
            s.shop_img,
            COUNT(c.menu_id) AS menu_count
        FROM orders o
        JOIN shop s ON o.shop_id = s.shop_id
        LEFT JOIN carts c ON o.orders_id = c.orders_id
        LEFT JOIN addr a ON o.addr_id = a.addr_id 
        WHERE o.member_id = #{member_id} 
        AND o.orders_isdelete = 0
        GROUP BY o.orders_id, s.shop_name, s.shop_img
        ORDER BY o.orders_cdate DESC
        LIMIT #{offset}, #{blockList};       
    </select>


    <!-- 날짜 범위로 필터링된 주문 목록을 조회 쿼리 -->
    <select id="selectPageListByDate" parameterType="map" resultType="order">
        SELECT 
            o.*,
            s.shop_name, 
            s.shop_img,
            COUNT(c.menu_id) AS menu_count
        FROM orders o
        JOIN shop s ON o.shop_id = s.shop_id
        LEFT JOIN carts c ON o.orders_id = c.orders_id
        LEFT JOIN addr a ON o.addr_id = a.addr_id 
        WHERE o.member_id = #{member_id}
        AND o.orders_isdelete = 0
        <if test="startDate != null and startDate != ''">
            AND o.orders_cdate &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND o.orders_cdate &lt;= #{endDate}
        </if>
        GROUP BY o.orders_id, o.member_id, o.orders_cdate, o.addr_id, s.shop_name, s.shop_img
        ORDER BY o.orders_cdate DESC
        LIMIT #{offset}, #{blockList};
    </select>

    <!-- 날짜 범위에 따른 주문 건수 조회 쿼리 -->
    <select id="getTotalCountByDate" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM orders o
        WHERE o.member_id = #{member_id}
        AND o.orders_isdelete = 0
        <if test="startDate != null and startDate != ''">
            AND o.orders_cdate &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND o.orders_cdate &lt;= #{endDate}
        </if>
    </select>
</mapper>
